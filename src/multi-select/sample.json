{
    "name": "MultiSelect Dropdown",
    "directory": "multi-select",
    "category": "Dropdowns",
    "samples": [{
            "url": "default",
            "name": "Default Functionalities",
            "category": "MultiSelect Dropdown",
            "description": "This example demonstrates the default functionalities of the Vue multiselect component with minimum configuration.",
            "sourceFiles":[
                { "displayName": "default.vue", "path":"src/multi-select/default.vue" },
                { "displayName": "dataSource.json", "path":"src/multi-select/dataSource.json" } 
            ]
        },
        {
            "url": "data-binding",
            "name": "Data Binding",
            "category": "MultiSelect Dropdown",
            "description": "This example demonstrates how to bind with local data source and fetch data from remote data service in the Vue multiselect component.",
            "sourceFiles":[
                { "displayName": "data-binding.vue", "path":"src/multi-select/data-binding.vue" },
                { "displayName": "dataSource.json", "path":"src/multi-select/dataSource.json" } 
            ]
        },
        {
            "url": "object-value-binding",
            "name": "Object Value Binding",
            "category": "MultiSelect Dropdown",
            "description": "This example demonstrates how to bind with data source in the Vue multiselect component.",
            "sourceFiles":[
                { "displayName": "object-value-binding.vue", "path":"src/multi-select/object-value-binding.vue" },
                { "displayName": "dataSource.json", "path":"src/multi-select/dataSource.json" } 
            ]
        },
        {
            "url": "disabled-items",
            "name": "Disabled Items",
            "category": "MultiSelect Dropdown",
            "description": "This example demonstrates the disabled items of Vue multiselect component.",
            "sourceFiles":[
                { "displayName": "disabled-items.vue", "path":"src/multi-select/disabled-items.vue" },
                { "displayName": "dataSource.json", "path":"src/multi-select/dataSource.json" } 
            ]
        },
        {
            "url": "grouping-icon",
            "name": "Grouping",
            "category": "MultiSelect Dropdown",
            "description": "This example demonstrates how to group based on the different categories with individual header and icon support using the Vue multiselect component.",
            "sourceFiles":[
                { "displayName": "grouping-icon.vue", "path":"src/multi-select/grouping-icon.vue" },
                { "displayName": "dataSource.json", "path":"src/multi-select/dataSource.json" } 
            ]
        },
        {
            "url": "virtual-scroll",
            "name": "Virtualization",
            "category": "MultiSelect Dropdown",
            "description": "This example demonstrates how to utilize the virtual scrolling support of Vue multiselect component.",
            "sourceFiles":[
                { "displayName": "virtual-scroll.vue", "path":"src/multi-select/virtual-scroll.vue" },
                { "displayName": "dataSource.json", "path":"src/multi-select/dataSource.json" } 
            ]
        },
        {
            "url": "template",
            "name": "Template",
            "category": "MultiSelect Dropdown",
            "description": "This example demonstrates how to customize the appearance of each item in the Vue multiselect component pop-up list using the template.",
            "sourceFiles":[
                { "displayName": "template.vue", "path":"src/multi-select/template.vue" },
                { "displayName": "dataSource.json", "path":"src/multi-select/dataSource.json" } 
            ]
        },
        {
            "url": "resize",
            "name": "Popup Resize",
            "category": "MultiSelect Dropdown",
            "description": "This demo showcases the custom resizing functionality of MultiSelect Dropdown, You can adjust the size of the popup based on your preferences, allowing for better control over its appearance",
            "sourceFiles":[
                { "displayName": "resize.vue", "path":"src/multi-select/resize.vue" },
                { "displayName": "dataSource.json", "path":"src/multi-select/dataSource.json" } 
            ]
        },
        {
            "url": "filtering",
            "name": "Filtering",
            "category": "MultiSelect Dropdown",
            "description": "This example demonstrates how the filtering functionalities works based on the typed characters in the Vue multiselect component.",
            "sourceFiles":[
                { "displayName": "filtering.vue", "path":"src/multi-select/filtering.vue" },
                { "displayName": "dataSource.json", "path":"src/multi-select/dataSource.json" } 
            ]
        },
        {
            "url": "custom-value",
            "name": "Custom Value",
            "category": "MultiSelect Dropdown",
            "description": "This example demonstrates the addition of a new value that is not present in the predefined list of the Vue multiselect component.",
            "sourceFiles":[
                { "displayName": "custom-value.vue", "path":"src/multi-select/custom-value.vue" },
                { "displayName": "dataSource.json", "path":"src/multi-select/dataSource.json" } 
            ]
        },
        {
            "url": "chip-customization",
            "name": "Chip Customization",
            "category": "MultiSelect Dropdown",
            "description": "This example demonstrates how to customize the appearance of the selected chip element in the Vue multiselect component.",
            "sourceFiles":[
                { "displayName": "chip-customization.vue", "path":"src/multi-select/chip-customization.vue" },
                { "displayName": "dataSource.json", "path":"src/multi-select/dataSource.json" } 
            ]
        },
        {
            "url": "checkbox",
            "name": "CheckBox",
            "category": "MultiSelect Dropdown",
            "description": "This example demonstrates how to select the multiple values through checkbox in the Vue multiselect component.",
            "sourceFiles":[
                { "displayName": "checkbox.vue", "path":"src/multi-select/checkbox.vue" },
                { "displayName": "dataSource.json", "path":"src/multi-select/dataSource.json" } 
            ]
        },
        {
            "url": "grouping-with-checkbox",
            "name": "Grouping with CheckBox",
            "category": "MultiSelect Dropdown",
            "description": "This example demonstrates how to select all the grouped list item values through checkbox in the Vue MultiSelect component.",
            "sourceFiles":[
                { "displayName": "grouping-with-checkbox.vue", "path":"src/multi-select/grouping-with-checkbox.vue" },
                { "displayName": "dataSource.json", "path":"src/multi-select/dataSource.json" } 
            ]
        },
        {
            "url": "selection-limit",
            "name": "Selection Limit",
            "category": "MultiSelect Dropdown",
            "description": "This example demonstrates the maximum selection limit functionalities with checkbox of the Vue multiselect component.",
            "sourceFiles":[
                { "displayName": "selection-limit.vue", "path":"src/multi-select/selection-limit.vue" },
                { "displayName": "dataSource.json", "path":"src/multi-select/dataSource.json" } 
            ]
        },
        {
            "url": "diacritics-filtering",
            "name": "Diacritics Filtering",
            "category": "MultiSelect Dropdown",
            "description": "This example demonstrates how to achieve the diacritics filter functionalities in the Vue multiselect component.",
            "sourceFiles":[
                { "displayName": "diacritics-filtering.vue", "path":"src/multi-select/diacritics-filtering.vue" },
                { "displayName": "dataSource.json", "path":"src/multi-select/dataSource.json" } 
            ]
        },
        {
            "url": "two-way-binding",
            "name": "Two-way Binding",
            "category": "MultiSelect Dropdown",
            "description": "The Vue Multiselect component supports two-way data binding using the v-model attribute of Vue directive. It helps to achieve in sync with data in the DOM.",
            "sourceFiles":[
                { "displayName": "two-way.vue", "path":"src/multi-select/two-way-binding.vue" },
                { "displayName": "dataSource.json", "path":"src/multi-select/dataSource.json" } 
            ]
        }
    ]
}
